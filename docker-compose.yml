x-keycloak-common: &keycloak-common
  restart: unless-stopped
  env_file:
    - .env
  environment:
    KC_DB: postgres
    KC_DB_URL: "jdbc:postgresql://postgres:5432/${DB_NAME}"
    KC_DB_USERNAME: ${DB_USER}
    KC_DB_PASSWORD: ${DB_PASSWORD}
    KC_BOOTSTRAP_ADMIN_USERNAME: ${KC_BOOTSTRAP_ADMIN_USERNAME}
    KC_BOOTSTRAP_ADMIN_PASSWORD: ${KC_BOOTSTRAP_ADMIN_PASSWORD}
    KC_HOSTNAME: ${KEYCLOAK_HOSTNAME}
    KC_HEALTH_ENABLED: true
    KC_METRICS_ENABLED: true
    KC_PROXY: passthrough
    KC_FEATURES: "preview,admin-fine-grained-authz,token-exchange"
    KC_LOG_LEVEL: INFO
    KC_LOG_CONSOLE_COLOR: true
  ports:
    - "${KEYCLOAK_PORT}:8080"
    - "${KEYCLOAK_MGMT_PORT}:9000"
  depends_on:
    postgres:
      condition: service_healthy
  networks:
    - iam-network
  volumes:
      - ./config/realms:/opt/keycloak/data/import:ro
      - ./themes:/opt/keycloak/themes:ro
      - keycloak_data:/opt/keycloak/data

services:
  postgres:
    image: postgres:15-alpine
    container_name: iam-postgres
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=C --lc-ctype=C"
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - iam-network

  keycloak-dev:
    profiles: ["dev"]
    <<: *keycloak-common
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: iam-keycloak-dev
    environment:
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HTTP_ENABLED: true
      KC_HTTP_COOKIE_SAME_SITE: LAX
      KC_HTTP_COOKIE_SECURE: false
      KC_THEME_CACHE_THEMES: false
      KC_THEME_CACHE_TEMPLATES: false

  keycloak-prod:
    profiles: ["prod"]
    <<: *keycloak-common
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: iam-keycloak-prod
    environment:
      KC_HOSTNAME_STRICT: true
      KC_HOSTNAME_STRICT_HTTPS: true



networks:
  iam-network:
    driver: bridge
    name: iam-network

volumes:
  postgres_data:
    name: iam-postgres-data
  keycloak_data:
    name: iam-keycloak-data
